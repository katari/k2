<?xml version="1.0" encoding="UTF-8"?>

<included>

  <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
    <resetJUL>true</resetJUL>
  </contextListener>

  <property name="LOG_FILE" value="${LOG_FILE:-target/log/test.log}"/>
  <property name="LOG_FILE_MAX_SIZE" value="10MB"/>

  <!-- Adds some color to the logging output. Used in the console appender
       pattern. -->
  <conversionRule conversionWord="clr"
    converterClass="org.springframework.boot.logging.logback.ColorConverter" />

  <!-- The console appender pattern. This should change. -->
  <property name="CONSOLE_LOG_PATTERN"
    value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(-){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n}"/>

  <!-- The file appender pattern. This should change. -->
  <property name="FILE_LOG_PATTERN"
    value="${FILE_LOG_PATTERN:-%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } - [%t] %-40.40logger{39} : %m%n}"/>

  <!-- File appender that rotates log files every 10MB, keeping only 3
       rotated log files. -->
  <appender name="FILE"
    class="ch.qos.logback.core.rolling.RollingFileAppender">
    <encoder>
      <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
    <file>${LOG_FILE}</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <fileNamePattern>${LOG_FILE}.%i</fileNamePattern>
      <maxIndex>1</maxIndex>
      <maxIndex>3</maxIndex>
    </rollingPolicy>
    <triggeringPolicy
      class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <MaxFileSize>${LOG_FILE_MAX_SIZE}</MaxFileSize>
    </triggeringPolicy>
  </appender>

  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>${CONSOLE_LOG_PATTERN}</pattern>
      <charset>utf8</charset>
    </encoder>
  </appender>

  <!-- A console appender that will only log errors. -->
  <appender name="CONSOLE_ERRORS" class="ch.qos.logback.core.ConsoleAppender">
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>ERROR</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <encoder>
      <pattern>${CONSOLE_LOG_PATTERN}</pattern>
      <charset>utf8</charset>
    </encoder>
  </appender>

  <!-- Logs to the console when the application starts. -->
  <logger name="${LAUNCHER_CLASS}" additivity="false" level="INFO">
    <appender-ref ref="CONSOLE"/>
  </logger>

  <!-- Default logger, logs info to a file. -->
  <!-- root level="INFO">
    <appender-ref ref="FILE" />
  </root -->

  <!-- vim: set ts=2 et sw=2 ai: -->
</included>


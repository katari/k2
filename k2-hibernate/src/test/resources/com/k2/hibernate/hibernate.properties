
# The hibernate dialect name
hibernate.dialect=org.hibernate.dialect.HSQLDialect

# Automatically validates or exports the schema to the database. NEVER USE
# ANYTHING BUT validate IN PRODUCTION!!!!
## hibernate.hbm2ddl.auto=validate
hibernate.hbm2ddl.auto=create

##############################################################################
##############################################################################
# DataSource sample configuration. See
# org.apache.tomcat.jdbc.pool.PoolProperties for configuration options.
##############################################################################

# Sets the connection information.
## datasource.url=jdbc:mysql://localhost:3306/database

# in memory db with mysql compatibility mode on.
datasource.driverClassName=org.hsqldb.jdbc.JDBCDriver
datasource.url=jdbc:hsqldb:mem:test;sql.syntax_mys=true
## datasource.username=root

# Set the number of connections that will be established when the connection
# pool is started. Default value is 10. If this value exceeds
# datasource.maxActive it will automatically be lowered.
## datasource.initialSize = 100

# The maximum number of active connections that can be allocated from this
# pool at the same time. The default value is 100
## datasource.maxActive = 500

# Time in milliseconds to keep this connection alive even when used. When a
# connection is returned to the pool, the pool will check to see if the
# ((now - time-when-connected) > maxAge) has been reached, and if so,
# it closes the connection rather than returning it to the
# The default value is 0, which implies that connections will be left open and
# no age check will be done upon returning the connection to the
## datasource.maxAge = 0

# The maximum number of milliseconds that the pool will wait (when there are
# no available connections and the datasource.maxActive has been
# reached) for a connection to be returned before throwing an exception.
# Default value is 30000 (30 seconds)
## datasource.maxWait = 30000

# boolean flag to set if stack traces should be logged for application code
# which abandoned a Connection. Logging of abandoned Connections adds
# overhead for every Connection borrow because a stack trace has to be
# generated. The default value is false.
## datasource.logAbandoned = false

# The minimum amount of time an object must sit idle in the pool before it is
#eligible for eviction. The default value is 60000 (60 seconds).
## datasource.minEvictableIdleTimeMillis= 60000

# The minimum number of established connections that should be kept in the
# pool at all times. The connection pool can shrink below this number if
# validation queries fail and connections get closed.
## datasource.minIdle = 50

# The maximum number of connections that should be kept in the idle
# Default value is maxActive 100
## datasource.maxIdle = 100

# Set to true if query validation should take place while the connection
# is idle.
## datasource.testWhileIdle = true

# The number of milliseconds to sleep between runs of the idle connection
# validation, abandoned cleaner and idle pool resizing. This value should not
# be set under 1 second. It dictates how often we check for idle, abandoned
# connections, and how often we validate idle connection and resize the idle
#  The default value is 5000 (5 seconds)
## datasource.timeBetweenEvictionRunsMillis = 30000

# The SQL query that will be used to validate connections from this pool before
# returning them to the caller or  If specified, this query does not
# have to return any data, it just can't throw a SQLException.
## datasource.validationQuery = SELECT 1
